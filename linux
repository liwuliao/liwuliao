
linux 常用SHELL
1.删除0字节文件
1  find -type f -size 0 -exec rm -rf {} \;
2.查看进程
按内存从大到小排列：
1	ps -e   -o "%C   : %p : %z : %a"|sort -k5 -nr
3.按cpu利用率从大到小排列
1	ps -e   -o "%C   : %p : %z : %a"|sort   -nr
4.打印说cache里的URL
1	grep -r -a   jpg /data/cache/* | strings | grep "http:" | awk -F'http:' '{print "http:"$2;}'
5.查看http的并发请求数及其TCP连接状态：
1	netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'
6. 文件中直接替换
1	#sed在这个文里Root的一行，匹配Root一行，将no替换成yes.
2	sed -i '/Root/s/no/yes/' /etc/ssh/sshd_config
7杀掉mysql进程：
1	ps aux|grep mysql|grep -v grep|awk '{print $2}'|xargs kill -9
2	killall -TERM mysqld
3	kill -9 `cat /usr/local/apache2/logs/httpd.pid`
8.显示运行3级别开启的服务:
1	#从中了解到cut的用途，截取数据
2	ls /etc/rc3.d/S* |cut -c 15-
9.如何在编写SHELL显示多个信息，用EOF
1	cat << EOF
2	+--------------------------------------------------------------+
3	|       === Welcome to Tunoff services ===                |
4	+--------------------------------------------------------------+
5	EOF
10. for 的巧用(如给mysql建软链接)
1	cd /usr/local/mysql/bin
2	for i in *
3	do ln /usr/local/mysql/bin/$i /usr/bin/$i
4	done
11. 取IP地址：
1	ifconfig eth0 |grep "inet addr:" |awk '{print $2}'|cut -c 6-  
2	#或者
3	ifconfig   | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'
12.内存的大小:
1	free -m |grep "Mem" | awk '{print $2}'
13.查看80端口连接数量
1	netstat -an -t | grep ":80" | grep ESTABLISHED | awk '{printf "%s %s\n",$5,$6}' | sort
14.查看Apache的并发请求数及其TCP连接状态：
1	netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'
15.因为同事要统计一下服务器下面所有的jpg的文件的大小,写了个shell给他来统计.原来用xargs实现,但他一次处理一部分,搞的有多个总和....,下面的命令就能解决啦.
1	find / -name *.jpg -exec wc -c {} \;|awk '{print $1}'|awk '{a+=$1}END{print a}'
16、CPU的数量（多核算多个CPU）
cat /proc/cpuinfo |grep -c processor
17   CPU负载  
1	cat /proc/loadavg
2	#检查前三个输出值是否超过了系统逻辑CPU的4倍。

18   CPU负载
1	mpstat 1 1
2	#检查%idle是否过低(比如小于5%)
19   内存空间
1	free
2	#检查free值是否过低   也可以用
3	cat /proc/meminfo
20   swap空间
1	free
2	###检查swap used值是否过高，如果swap used值过高，进一步检查swap动作是否频繁：
3	vmstat 1 5
4	###观察si和so值是否较大
21   磁盘空间
1	df -h
2	#检查是否有分区使用率(Use%)过高(比如超过90%)   如发现某个分区空间接近用尽，
3	#可以进入该分区的挂载点，用以下命令找出占用空间最多的文件或目录：
4	du -cks * | sort -rn | head -n 10
22   磁盘I/O负载
1	iostat -x 1 2
2	#检查I/O使用率(%util)是否超过100%
23   网络负载
1	sar -n DEV
2	#检查网络流量(rxbyt/s, txbyt/s)是否过高

24   网络错误
1	netstat -i
2	#检查是否有网络错误(drop fifo colls carrier)   也可以用命令：
3	cat /proc/net/dev
25 网络连接数目
1	netstat -an | grep -E “^(tcp)” | cut -c 68- | sort | uniq -c | sort -n
26   进程总数
1	ps aux | wc -l
2	#检查进程个数是否正常 (比如超过250)
27   可运行进程数目
1	vmwtat 1 5
2	#列给出的是可运行进程的数目，检查其是否超过系统逻辑CPU的4倍
28   进程
1	top -id 1
2	#观察是否有异常进程出现
29   网络状态   检查DNS, 网关等是否可以正常连通
30   用户
1	who | wc -l
2	#检查登录用户是否过多 (比如超过50个)   也可以用命令：
3	uptime
31   系统日志
1	cat /var/log/rflogview/*errors
2	#检查是否有异常错误记录   也可以搜寻一些异常关键字，例如：
3	 grep -i error /var/log/messages
4	 grep -i fail /var/log/messages
32   核心日志
1	dmesg
2	#检查是否有异常错误记录
33   系统时间
1	date
2	#检查系统时间是否正确
34   打开文件数目
1	lsof | wc -l
2	#检查打开文件总数是否过多
35   日志
1	logwatch –print
2	#配置/etc/log.d/logwatch.conf，将 Mailto 设置为自己的email 地址，
3	#启动mail服务 (sendmail或者postfix)，这样就可以每天收到日志报告了。
4	#缺省logwatch只报告昨天的日志，可以用：
5	logwatch –print –range all
6	#获得所有的日志分析结果。
7	#可以用
8	logwatch –print –detail high
9	#获得更具体的日志分析结果(而不仅仅是出错日志)。
36.杀掉80端口相关的进程
1	lsof -i :80|grep -v "PID"|awk '{print "kill -9",$2}'|sh
37.清除僵死进程。
1	ps -eal | awk '{ if ($2 == "Z") {print $4}}' | kill -9
38.tcpdump 抓包 ，用来防止80端口被人攻击时可以分析数据
1	tcpdump -c 10000 -i eth0 -n dst port 80 > /root/pkts
39.然后检查IP的重复数 并从小到大排序 注意 "-t\ +0"   中间是两个空格
1	less pkts | awk {'printf $3"\n"'} | cut -d. -f 1-4 | sort | uniq -c | awk {'printf $1" "$2"\n"'} | sort -n -t\ +0
40.查看有多少个活动的php-cgi进程
1	netstat -anp | grep php-cgi | grep ^tcp | wc -l
2	chkconfig --list | awk '{if ($5=="3:on") print $1}'
41.kudzu查看网卡型号
1	kudzu --probe --class=network
40、杀死多个相关进程
1	ps -ef | grep oracleoratest | grep -v grep |awk '{print $2}' | xargs -t -l kill -9
41、统计一个文件中第一列出现的次数
1	awk '{a[$1]++}END{for(i in a){print i,a[i] | "sort -r -k 2"}}'    1.txt
42、匹配中文字符的正则表达式：

01	<span style="font-weight:bold;">[\u4e00-\u9fa5]</span> ####评注：匹配中文还真是个头疼的事，有了这个表达式就好办了
02	 
03	 #匹配双字节字符(包括汉字在内)：<span style="font-weight:bold;">[^\x00-\xff]</span> ####评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）
04	 
05	 #匹配空白行的正则表达式：<span style="font-weight:bold;">\n\s*\r</span> ####评注：可以用来删除空白行
06	 
07	 #匹配HTML标记的正则表达式：<span style="font-weight:bold;"><(\S*?)[^>]*>.*?</\1>|<.*? /></span> ####评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力
08	 
09	 #匹配首尾空白字符的正则表达式：
10	^\s*|\s*$
11	####评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式
12	 
13	 #匹配Email地址的正则表达式：
14	\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*
15	####评注：表单验证时很实用
16	 
17	 #匹配网址URL的正则表达式：
18	[a-zA-z]+://[^\s]*
19	####评注：网上流传的版本功能很有限，上面这个基本可以满足需求
20	 
21	 #匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：
22	^[a-zA-Z][a-zA-Z0-9_]{4,15}$
23	####评注：表单验证时很实用
24	 
25	 #匹配国内电话号码：
26	\d{3}-\d{8}|\d{4}-\d{7}
27	####评注：匹配形式如 0511-4405222 或 021-87888822
28	 
29	 #匹配腾讯QQ号：[1-9][0-9]{4,}
30	####评注：腾讯QQ号从10000开始
31	  
32	 #匹配中国邮政编码：
33	[1-9]\d{5}(?!\d)
34	####评注：中国邮政编码为6位数字
35	 
36	 #匹配身份证：
37	\d{15}|\d{18}
38	####评注：中国的身份证为15位或18位
39	 
40	 #匹配ip地址：
41	\d+\.\d+\.\d+\.\d+
42	####评注：提取ip地址时有用
43	 
44	 
45	 #匹配特定数字：
46	^[1-9]\d*$　 　                                    //匹配正整数
47	^-[1-9]\d*$ 　                                     //匹配负整数
48	^-?[1-9]\d*$　　                                   //匹配整数
49	^[1-9]\d*|0$　                                     //匹配非负整数（正整数 + 0）
50	^-[1-9]\d*|0$　　                                  //匹配非正整数（负整数 + 0）
51	^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$　　                 //匹配正浮点数
52	^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$　                //匹配负浮点数
53	^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$　      //匹配浮点数
54	^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$　　        //匹配非负浮点数（正浮点数 + 0）
55	^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$　　   //匹配非正浮点数（负浮点数 + 0）
56	#####评注：处理大量数据时有用，具体应用时注意修正
57	 
58	 
59	 #匹配特定字符串：
60	^[A-Za-z]+$　　                                   //匹配由26个英文字母组成的字符串
61	^[A-Z]+$　　                                      //匹配由26个英文字母的大写组成的字符串
62	^[a-z]+$　　                                      //匹配由26个英文字母的小写组成的字符串
63	^[A-Za-z0-9]+$　　                                //匹配由数字和26个英文字母组成的字符串
64	^\w+$　　                                         //匹配由数字、26个英文字母或者下划线组成的字符串
65	####评注：最基本也是最常用的一些表达式
